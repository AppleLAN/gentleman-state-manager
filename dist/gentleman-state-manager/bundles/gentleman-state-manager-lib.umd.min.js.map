{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://gentleman-state-manager-lib/lib/utils/functionalities.ts","ng://gentleman-state-manager-lib/lib/models/gentleman-state-object.ts","ng://gentleman-state-manager-lib/lib/services/gentleman-state.service.ts","ng://gentleman-state-manager-lib/lib/gentleman-state-manager.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","create","checkIfConditionMet","condition","errorMessage","conditionMet","met","console","error","Error","value","GentlemanStateObject","state","stateProperties","observableSubject","BehaviorSubject","getObservable","asObservable","getStateProperties","unsubscribe","getStateSnapshot","getPropertyFromState","property","getPropertyFromObservable","_this","pipe","map","checkIfPropertyExists","setObservableValues","emit","setStateValues","next","exist","undefined","resetState","GentlemanStateService","sourceOfTruthKeys","observerArray","forEach","k","createObservable","paramIndex","decorator","checkIfFound","observableArrayItem","observable","push","GentlemanStateService_1","find","obs","emitValue","data","destroyObservable","selectedObservable","filter","Inject","args","Injectable","providedIn","GentlemanStateManagerModule","forRoot","ngModule","GentlemanStateManagerModule_1","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Condition} from '../models/utils';\n\n/**\n * @desc checks if the condition is met and returns its value\n * @param condition - the condition to check\n * @param errorMessage - the error message to be shown if the condition is not met\n * @return any\n */\n\nexport function checkIfConditionMet(condition: () => Condition, errorMessage: string): any {\n  const conditionMet = condition();\n  if (!conditionMet.met) {\n    console.error(errorMessage);\n    throw Error(errorMessage);\n  }\n  return conditionMet.value;\n}\n","import {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {StateProperties, TypeWithKey} from './public-api';\nimport {checkIfConditionMet} from '../utils/public-api';\n\nexport class GentlemanStateObject<T extends TypeWithKey<any>> {\n  private state: T;\n  private stateProperties: StateProperties = {};\n  readonly observableSubject: BehaviorSubject<T>;\n\n  constructor(state: T, stateProperties: StateProperties) {\n    this.state = state;\n    this.stateProperties = stateProperties;\n    this.observableSubject = new BehaviorSubject(state);\n  }\n\n  /**\n   * @desc returns the observable that contains the state for async operations - it listens for changes\n   * @return Observable\n   */\n  getObservable(): Observable<T> {\n    return this.observableSubject.asObservable();\n  }\n\n  /**\n   * @desc returns the state properties object\n   * @return StateProperties\n   */\n  getStateProperties(): StateProperties {\n    return this.stateProperties;\n  }\n\n  /**\n   * @desc unsubscribes from the observable\n   * @return void\n   */\n  unsubscribe(): void {\n    this.observableSubject.unsubscribe();\n  }\n\n  /**\n   * @desc returns the value of the state at the time of the call\n   * @return any\n   */\n  getStateSnapshot(): T {\n    return { ...this.state };\n  }\n\n  /**\n   * @desc returns the value of a property of the state at the time of the call\n   * @param property - the name of the requested property\n   * @return any\n   */\n  getPropertyFromState(property: string): any {\n    return this.state[property];\n  }\n\n  /**\n   * @desc returns the value of a property of the state for async operations - it listens for changes\n   * @param property - the name of the requested property\n   * @return Observable\n   */\n  getPropertyFromObservable(property: string): Observable<any> {\n    return this.getObservable().pipe(map(s => this.checkIfPropertyExists(s, property)));\n  }\n\n  /**\n   * @desc sets the value for a certain property inside the state, triggers an async event\n   * @param value - the value for the requested property\n   * @param property - the name of the requested property\n   * @param emit - if true it will trigger an async event\n   * @return void\n   */\n  setObservableValues(value: T, property: string | null = null, emit = true): void {\n    this.setStateValues(value, property);\n    if (emit) {\n      this.observableSubject.next(this.state);\n    }\n  }\n\n  /**\n   * @desc sets the value for a certain property inside the state, doesn't triggers an async event\n   * @param value - the value for the requested property\n   * @param property - the name of the requested property, if no property it will try to patch the values into the state\n   * @return void\n   */\n  setStateValues(value: T, property: string | null): void {\n    const exist = this.checkIfPropertyExists(this.state, property);\n    if (property && exist !== undefined) {\n      (this.state as TypeWithKey<any>)[property] = value;\n    } else {\n      this.state = {\n        ...this.state,\n        ...value\n      };\n    }\n  }\n\n  /**\n   * @desc resets the state\n   * @return void\n   */\n  resetState(): void {\n    (this.state as TypeWithKey<any>) = {};\n  }\n\n  /**\n   * @desc checks if the selected property exists inside the state\n   * @param state - the state of the observable, the object that represents what the observable is going to contain\n   * @param property - the selected property\n   * @return any\n   */\n  private checkIfPropertyExists(state: T, property: string): any {\n    const condition = () => {\n      return {met: state.hasOwnProperty(property), value: state[property]};\n    };\n    return checkIfConditionMet(() => condition(), 'Selected property not found ! check if the key is correct and exists');\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {GentlemanStateObject, ObserverArrayItem, StateProperties} from '../models/public-api';\nimport {SourceOfTruth, SourceOfTruthInitiate} from '../models/source-of-truth';\nimport {checkIfConditionMet} from '../utils/public-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GentlemanStateService {\n  private observerArray: SourceOfTruth = [];\n\n  constructor(@Inject('sourceOfTruthKeys') sourceOfTruthKeys: SourceOfTruthInitiate[]) {\n    sourceOfTruthKeys.forEach(k => {\n      const {key, state, stateProperties} = k;\n      this.createObservable(key, state, stateProperties);\n    });\n  }\n\n  /**\n   * @desc it checks if the searched object exists, if not it throws an errors and stops the execution.\n   * @param observableArrayItem - ObserverArrayItem | undefined\n   * @return ObserverArrayItem\n   */\n  private static checkIfFound(observableArrayItem: ObserverArrayItem<any> | undefined): ObserverArrayItem<any> {\n    const condition = () => {\n      return {met: !!observableArrayItem, value: observableArrayItem};\n    };\n    return checkIfConditionMet(() => condition(), 'Observable item not found ! check if the key is correct and exists');\n  }\n\n  /**\n   * @desc it creates and observable and adds it to the observable array.\n   * @param key - the key to be used to represent the observable item inside the array\n   * @param state - the state of the observable, the object that represents what the observable is going to contain\n   * @param stateProperties - the properties of the state\n   * @return void\n   */\n  createObservable(key: string, state: any, stateProperties: StateProperties): void {\n    const observable = new GentlemanStateObject(state, stateProperties);\n    this.observerArray.push({key, observable});\n  }\n\n  /**\n   * @desc it returns the selected observable using the provided key.\n   * @param key - the key to be used to represent the observable item inside the array\n   * @return ObserverArrayItem\n   */\n  getObservable(key: string): GentlemanStateObject<any> {\n    const observableArrayItem = GentlemanStateService.checkIfFound(this.observerArray.find(obs => obs.key === key));\n    return observableArrayItem?.observable;\n  }\n\n  /**\n   * @desc it emits a new value into the selected observable using the provided key.\n   * @param key - the key to be used to represent the observable item inside the array\n   * @param data - the data to be emitted inside the selected observable\n   * @return void\n   */\n  emitValue(key: string, data: any): void {\n    const observableArrayItem = GentlemanStateService.checkIfFound(this.observerArray.find(obs => obs.key === key));\n    observableArrayItem?.observable.setObservableValues(data);\n  }\n\n  /**\n   * @desc it destroys an object from the observable array.\n   * @param key - the key to be used to represent the observable item inside the array\n   * @return void\n   */\n  destroyObservable(key: string): void {\n    const selectedObservable = GentlemanStateService.checkIfFound(this.observerArray.find(obs => obs.key === key));\n    selectedObservable?.observable.unsubscribe();\n    this.observerArray = this.observerArray.filter(obs => obs.key !== key);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {SourceOfTruthInitiate} from './models/source-of-truth';\nimport {GentlemanStateService} from './services/public-api';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class GentlemanStateManagerModule {\n  static forRoot(sourceOfTruthKeys: SourceOfTruthInitiate[]): ModuleWithProviders<GentlemanStateManagerModule> {\n    return {\n      ngModule: GentlemanStateManagerModule,\n      providers: [GentlemanStateService, {provide: 'sourceOfTruthKeys', useValue: sourceOfTruthKeys}]\n    };\n  }\n}\n"]}